/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */


// Plugins
plugins {

  // Apply the java-library plugin for API and implementation separation.
  id "java-library"

  // To publish to maven
  id "maven-publish"
  id "signing"
}


// Project info
project.version = "1.3.0"
project.group = "com.kaderate"
project.archivesBaseName = rootProject.name

// Project title & description
project.ext.title = "JSONFeed"
project.description = "${project.ext.title} Parser"


// Tasks
tasks.named("jar") {
  manifest {
    attributes("Implementation-Title": rootProject.name,
               "Implementation-Version": project.version)
  }
}


// Build source and javadoc jars
java {
  withSourcesJar()
  withJavadocJar()
}


// Repositories
repositories {

  // Use Maven Central for resolving dependencies
  mavenCentral()
}


// Dependencies
dependencies {

  // This dependency is used internally, and not exposed to consumers on their own compile classpath
  // https://github.com/stleary/JSON-java
  // https://search.maven.org/artifact/org.json/json/20211205/bundle
  implementation "org.json:json:20211205"

  // Use JUnit test framework
  // https://mvnrepository.com/artifact/junit/junit
  testImplementation "junit:junit:4.13.2"

}



// Publishing
//
// https://docs.gradle.org/6.7.1/userguide/publishing_maven.html
//
publishing {
  publications {
    mavenJava(MavenPublication) {
      pom {
        name = project.ext.title
        artifactId = rootProject.name
        from components.java
        description = project.description
        url = "https://github.com/fschiettecatte/jsonfeed"
        licenses {
          license {
            name = "The Apache License, Version 2.0"
            url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
          }
        }
        developers {
          developer {
            id = "fschiettecatte@gmail.com"
            name = "Fran√ßois Schiettecatte"
            email = "fschiettecatte@gmail.com"
          }
        }
        scm {
          connection = "scm:git:git://github.com/fschiettecatte/jsonfeed.git"
          developerConnection = "scm:git:ssh://github.com:fschiettecatte/jsonfeed.git"
          url = "https://github.com/fschiettecatte/jsonfeed"
        }
      }
    }
  }
  repositories {
    maven {
      def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
      def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      url = project.version.endsWith("SNAPSHOT") ? snapshotsRepoUrl : releasesRepoUrl
      credentials {
        username = ossrhUsername
        password = ossrhPassword
      }
    }
  }
}


// Signing for publishing
signing {
  sign publishing.publications.mavenJava
}


